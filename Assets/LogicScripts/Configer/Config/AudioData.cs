
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class AudioData : Luban.BeanBase
{
    public AudioData(JSONNode _buf) 
    {
        { if(!_buf["audioName"].IsString) { throw new SerializationException(); }  AudioName = _buf["audioName"]; }
        { if(!_buf["sourceType"].IsNumber) { throw new SerializationException(); }  SourceType = (AudioSourceType)_buf["sourceType"].AsInt; }
        { if(!_buf["playType"].IsNumber) { throw new SerializationException(); }  PlayType = _buf["playType"]; }
        { if(!_buf["volume"].IsNumber) { throw new SerializationException(); }  Volume = _buf["volume"]; }
        { if(!_buf["speed"].IsNumber) { throw new SerializationException(); }  Speed = _buf["speed"]; }
        { if(!_buf["loop"].IsBoolean) { throw new SerializationException(); }  Loop = _buf["loop"]; }
        { if(!_buf["onlySelf"].IsBoolean) { throw new SerializationException(); }  OnlySelf = _buf["onlySelf"]; }
        { if(!_buf["delay"].IsNumber) { throw new SerializationException(); }  Delay = _buf["delay"]; }
        { if(!_buf["weight"].IsNumber) { throw new SerializationException(); }  Weight = _buf["weight"]; }
        { if(!_buf["maxLoopTime"].IsNumber) { throw new SerializationException(); }  MaxLoopTime = _buf["maxLoopTime"]; }
    }

    public static AudioData DeserializeAudioData(JSONNode _buf)
    {
        return new AudioData(_buf);
    }

    public readonly string AudioName;
    public readonly AudioSourceType SourceType;
    public readonly int PlayType;
    public readonly float Volume;
    public readonly float Speed;
    public readonly bool Loop;
    public readonly bool OnlySelf;
    public readonly float Delay;
    public readonly float Weight;
    public readonly float MaxLoopTime;
   
    public const int __ID__ = -2103294848;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "audioName:" + AudioName + ","
        + "sourceType:" + SourceType + ","
        + "playType:" + PlayType + ","
        + "volume:" + Volume + ","
        + "speed:" + Speed + ","
        + "loop:" + Loop + ","
        + "onlySelf:" + OnlySelf + ","
        + "delay:" + Delay + ","
        + "weight:" + Weight + ","
        + "maxLoopTime:" + MaxLoopTime + ","
        + "}";
    }
}

}
