
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class Animation : Luban.BeanBase
{
    public Animation(JSONNode _buf) 
    {
        { if(!_buf["key"].IsString) { throw new SerializationException(); }  Key = _buf["key"]; }
        { if(!_buf["animType"].IsNumber) { throw new SerializationException(); }  AnimType = _buf["animType"]; }
        { var __json0 = _buf["clips"]; if(!__json0.IsArray) { throw new SerializationException(); } Clips = new System.Collections.Generic.List<AnimClipData>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { AnimClipData __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = AnimClipData.DeserializeAnimClipData(__e0);  }  Clips.Add(__v0); }   }
        { if(!_buf["frontTime"].IsNumber) { throw new SerializationException(); }  FrontTime = _buf["frontTime"]; }
        { if(!_buf["backTime"].IsNumber) { throw new SerializationException(); }  BackTime = _buf["backTime"]; }
        { var __json0 = _buf["eventTimes"]; if(!__json0.IsArray) { throw new SerializationException(); } EventTimes = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  EventTimes.Add(__v0); }   }
    }

    public static Animation DeserializeAnimation(JSONNode _buf)
    {
        return new Animation(_buf);
    }

    public readonly string Key;
    public readonly int AnimType;
    /// <summary>
    /// animPath
    /// </summary>
    public readonly System.Collections.Generic.List<AnimClipData> Clips;
    public readonly float FrontTime;
    public readonly float BackTime;
    public readonly System.Collections.Generic.List<string> EventTimes;
   
    public const int __ID__ = -1172489372;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        foreach (var _e in Clips) { _e?.ResolveRef(tables); }
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "key:" + Key + ","
        + "animType:" + AnimType + ","
        + "clips:" + Luban.StringUtil.CollectionToString(Clips) + ","
        + "frontTime:" + FrontTime + ","
        + "backTime:" + BackTime + ","
        + "eventTimes:" + Luban.StringUtil.CollectionToString(EventTimes) + ","
        + "}";
    }
}

}
