
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg.test;

import luban.*;


public final class TestMap extends AbstractBean {
    public TestMap(ByteBuf _buf) { 
        id = _buf.readInt();
        {int n = Math.min(_buf.readSize(), _buf.size());x1 = new java.util.HashMap<Integer, Integer>(n * 3 / 2);for(int i = 0 ; i < n ; i++) { Integer _k;  _k = _buf.readInt(); Integer _v;  _v = _buf.readInt();     x1.put(_k, _v);}}
        {int n = Math.min(_buf.readSize(), _buf.size());x2 = new java.util.HashMap<Long, Integer>(n * 3 / 2);for(int i = 0 ; i < n ; i++) { Long _k;  _k = _buf.readLong(); Integer _v;  _v = _buf.readInt();     x2.put(_k, _v);}}
        {int n = Math.min(_buf.readSize(), _buf.size());x3 = new java.util.HashMap<String, Integer>(n * 3 / 2);for(int i = 0 ; i < n ; i++) { String _k;  _k = _buf.readString(); Integer _v;  _v = _buf.readInt();     x3.put(_k, _v);}}
        {int n = Math.min(_buf.readSize(), _buf.size());x4 = new java.util.HashMap<Integer, Integer>(n * 3 / 2);for(int i = 0 ; i < n ; i++) { Integer _k;  _k = _buf.readInt(); Integer _v;  _v = _buf.readInt();     x4.put(_k, _v);}}
    }

    public static TestMap deserialize(ByteBuf _buf) {
            return new cfg.test.TestMap(_buf);
    }

    public final int id;
    public final java.util.HashMap<Integer, Integer> x1;
    public final java.util.HashMap<Long, Integer> x2;
    public final java.util.HashMap<String, Integer> x3;
    public final java.util.HashMap<Integer, Integer> x4;

    public static final int __ID__ = -543227410;
    
    @Override
    public int getTypeId() { return __ID__; }

    @Override
    public String toString() {
        return "{ "
        + "(format_field_name __code_style field.name):" + id + ","
        + "(format_field_name __code_style field.name):" + x1 + ","
        + "(format_field_name __code_style field.name):" + x2 + ","
        + "(format_field_name __code_style field.name):" + x3 + ","
        + "(format_field_name __code_style field.name):" + x4 + ","
        + "}";
    }
}

