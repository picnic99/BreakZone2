
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;

namespace editor.cfg.test
{

public sealed class TestSet :  Luban.EditorBeanBase 
{
    public TestSet()
    {
            x0 = "";
            x1 = new System.Collections.Generic.List<int>();
            x2 = new System.Collections.Generic.List<long>();
            x3 = new System.Collections.Generic.List<string>();
            x4 = new System.Collections.Generic.List<test.DemoEnum>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x0"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  x0 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } x1 = new System.Collections.Generic.List<int>(); foreach(JSONNode __e in _fieldJson.Children) { int __v;  if(!__e.IsNumber) { throw new SerializationException(); }  __v = __e;  x1.Add(__v); }  
            }
        }
        
        { 
            var _fieldJson = _json["x2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } x2 = new System.Collections.Generic.List<long>(); foreach(JSONNode __e in _fieldJson.Children) { long __v;  if(!__e.IsNumber) { throw new SerializationException(); }  __v = __e;  x2.Add(__v); }  
            }
        }
        
        { 
            var _fieldJson = _json["x3"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } x3 = new System.Collections.Generic.List<string>(); foreach(JSONNode __e in _fieldJson.Children) { string __v;  if(!__e.IsString) { throw new SerializationException(); }  __v = __e;  x3.Add(__v); }  
            }
        }
        
        { 
            var _fieldJson = _json["x4"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } x4 = new System.Collections.Generic.List<test.DemoEnum>(); foreach(JSONNode __e in _fieldJson.Children) { test.DemoEnum __v;  if(__e.IsString) { __v = (test.DemoEnum)System.Enum.Parse(typeof(test.DemoEnum), __e); } else if(__e.IsNumber) { __v = (test.DemoEnum)(int)__e; } else { throw new SerializationException(); }    x4.Add(__v); }  
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }
        {

            if (x0 == null) { throw new System.ArgumentNullException(); }
            _json["x0"] = new JSONString(x0);
        }
        {

            if (x1 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in x1) { __cjson["null"] = new JSONNumber(_e); } _json["x1"] = __cjson; }
        }
        {

            if (x2 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in x2) { __cjson["null"] = new JSONNumber(_e); } _json["x2"] = __cjson; }
        }
        {

            if (x3 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in x3) { __cjson["null"] = new JSONString(_e); } _json["x3"] = __cjson; }
        }
        {

            if (x4 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in x4) { __cjson["null"] = new JSONNumber((int)_e); } _json["x4"] = __cjson; }
        }
    }

    public static TestSet LoadJsonTestSet(SimpleJSON.JSONNode _json)
    {
        TestSet obj = new test.TestSet();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTestSet(TestSet _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int id;

    public string x0;

    public System.Collections.Generic.List<int> x1;

    public System.Collections.Generic.List<long> x2;

    public System.Collections.Generic.List<string> x3;

    public System.Collections.Generic.List<test.DemoEnum> x4;

}

}
