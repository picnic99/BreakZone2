
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;

namespace editor.cfg.test
{

public sealed class MultiRowRecord :  Luban.EditorBeanBase 
{
    public MultiRowRecord()
    {
            name = "";
            oneRows = new System.Collections.Generic.List<test.MultiRowType1>();
            multiRows1 = new System.Collections.Generic.List<test.MultiRowType1>();
            multiRows2 = System.Array.Empty<test.MultiRowType1>();
            multiRows4 = new System.Collections.Generic.Dictionary<int,test.MultiRowType2>();
            multiRows5 = new System.Collections.Generic.List<test.MultiRowType3>();
            multiRows6 = new System.Collections.Generic.Dictionary<int,test.MultiRowType2>();
            multiRows7 = new System.Collections.Generic.Dictionary<int,int>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["name"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  name = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["one_rows"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } oneRows = new System.Collections.Generic.List<test.MultiRowType1>(); foreach(JSONNode __e in _fieldJson.Children) { test.MultiRowType1 __v;  if(!__e.IsObject) { throw new SerializationException(); }  __v = test.MultiRowType1.LoadJsonMultiRowType1(__e);  oneRows.Add(__v); }  
            }
        }
        
        { 
            var _fieldJson = _json["multi_rows1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } multiRows1 = new System.Collections.Generic.List<test.MultiRowType1>(); foreach(JSONNode __e in _fieldJson.Children) { test.MultiRowType1 __v;  if(!__e.IsObject) { throw new SerializationException(); }  __v = test.MultiRowType1.LoadJsonMultiRowType1(__e);  multiRows1.Add(__v); }  
            }
        }
        
        { 
            var _fieldJson = _json["multi_rows2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } int _n = _fieldJson.Count; multiRows2 = new test.MultiRowType1[_n]; int _index=0; foreach(SimpleJSON.JSONNode __e in _fieldJson.Children) { test.MultiRowType1 __v;  if(!__e.IsObject) { throw new SerializationException(); }  __v = test.MultiRowType1.LoadJsonMultiRowType1(__e);  multiRows2[_index++] = __v; }  
            }
        }
        
        { 
            var _fieldJson = _json["multi_rows4"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } multiRows4 = new System.Collections.Generic.Dictionary<int, test.MultiRowType2>(); foreach(JSONNode __e in _fieldJson.Children) { int __k;  if(!__e[0].IsNumber) { throw new SerializationException(); }  __k = __e[0]; test.MultiRowType2 __v;  if(!__e[1].IsObject) { throw new SerializationException(); }  __v = test.MultiRowType2.LoadJsonMultiRowType2(__e[1]);  multiRows4.Add(__k, __v); }  
            }
        }
        
        { 
            var _fieldJson = _json["multi_rows5"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } multiRows5 = new System.Collections.Generic.List<test.MultiRowType3>(); foreach(JSONNode __e in _fieldJson.Children) { test.MultiRowType3 __v;  if(!__e.IsObject) { throw new SerializationException(); }  __v = test.MultiRowType3.LoadJsonMultiRowType3(__e);  multiRows5.Add(__v); }  
            }
        }
        
        { 
            var _fieldJson = _json["multi_rows6"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } multiRows6 = new System.Collections.Generic.Dictionary<int, test.MultiRowType2>(); foreach(JSONNode __e in _fieldJson.Children) { int __k;  if(!__e[0].IsNumber) { throw new SerializationException(); }  __k = __e[0]; test.MultiRowType2 __v;  if(!__e[1].IsObject) { throw new SerializationException(); }  __v = test.MultiRowType2.LoadJsonMultiRowType2(__e[1]);  multiRows6.Add(__k, __v); }  
            }
        }
        
        { 
            var _fieldJson = _json["multi_rows7"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } multiRows7 = new System.Collections.Generic.Dictionary<int, int>(); foreach(JSONNode __e in _fieldJson.Children) { int __k;  if(!__e[0].IsNumber) { throw new SerializationException(); }  __k = __e[0]; int __v;  if(!__e[1].IsNumber) { throw new SerializationException(); }  __v = __e[1];  multiRows7.Add(__k, __v); }  
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }
        {

            if (name == null) { throw new System.ArgumentNullException(); }
            _json["name"] = new JSONString(name);
        }
        {

            if (oneRows == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in oneRows) { { var __bjson = new JSONObject();  test.MultiRowType1.SaveJsonMultiRowType1(_e, __bjson); __cjson["null"] = __bjson; } } _json["one_rows"] = __cjson; }
        }
        {

            if (multiRows1 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in multiRows1) { { var __bjson = new JSONObject();  test.MultiRowType1.SaveJsonMultiRowType1(_e, __bjson); __cjson["null"] = __bjson; } } _json["multi_rows1"] = __cjson; }
        }
        {

            if (multiRows2 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in multiRows2) { { var __bjson = new JSONObject();  test.MultiRowType1.SaveJsonMultiRowType1(_e, __bjson); __cjson["null"] = __bjson; } } _json["multi_rows2"] = __cjson; }
        }
        {

            if (multiRows4 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in multiRows4) { var __entry = new JSONArray(); __cjson[null] = __entry; __entry["null"] = new JSONNumber(_e.Key); { var __bjson = new JSONObject();  test.MultiRowType2.SaveJsonMultiRowType2(_e.Value, __bjson); __entry["null"] = __bjson; } } _json["multi_rows4"] = __cjson; }
        }
        {

            if (multiRows5 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in multiRows5) { { var __bjson = new JSONObject();  test.MultiRowType3.SaveJsonMultiRowType3(_e, __bjson); __cjson["null"] = __bjson; } } _json["multi_rows5"] = __cjson; }
        }
        {

            if (multiRows6 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in multiRows6) { var __entry = new JSONArray(); __cjson[null] = __entry; __entry["null"] = new JSONNumber(_e.Key); { var __bjson = new JSONObject();  test.MultiRowType2.SaveJsonMultiRowType2(_e.Value, __bjson); __entry["null"] = __bjson; } } _json["multi_rows6"] = __cjson; }
        }
        {

            if (multiRows7 == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in multiRows7) { var __entry = new JSONArray(); __cjson[null] = __entry; __entry["null"] = new JSONNumber(_e.Key); __entry["null"] = new JSONNumber(_e.Value); } _json["multi_rows7"] = __cjson; }
        }
    }

    public static MultiRowRecord LoadJsonMultiRowRecord(SimpleJSON.JSONNode _json)
    {
        MultiRowRecord obj = new test.MultiRowRecord();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonMultiRowRecord(MultiRowRecord _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int id;

    public string name;

    public System.Collections.Generic.List<test.MultiRowType1> oneRows;

    public System.Collections.Generic.List<test.MultiRowType1> multiRows1;

    public test.MultiRowType1[] multiRows2;

    public System.Collections.Generic.Dictionary<int, test.MultiRowType2> multiRows4;

    public System.Collections.Generic.List<test.MultiRowType3> multiRows5;

    public System.Collections.Generic.Dictionary<int, test.MultiRowType2> multiRows6;

    public System.Collections.Generic.Dictionary<int, int> multiRows7;

}

}
