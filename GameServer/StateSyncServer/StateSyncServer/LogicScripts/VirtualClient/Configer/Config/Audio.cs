
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class Audio : Luban.BeanBase
{
    public Audio(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["characterId"].IsNumber) { throw new SerializationException(); }  CharacterId = _buf["characterId"]; }
        { if(!_buf["skillId"].IsNumber) { throw new SerializationException(); }  SkillId = _buf["skillId"]; }
        { if(!_buf["stateId"].IsNumber) { throw new SerializationException(); }  StateId = _buf["stateId"]; }
        { if(!_buf["keyword"].IsString) { throw new SerializationException(); }  Keyword = _buf["keyword"]; }
        { if(!_buf["playMode"].IsNumber) { throw new SerializationException(); }  PlayMode = _buf["playMode"]; }
        { var __json0 = _buf["audioDatas"]; if(!__json0.IsArray) { throw new SerializationException(); } AudioDatas = new System.Collections.Generic.List<AudioData>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { AudioData __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = AudioData.DeserializeAudioData(__e0);  }  AudioDatas.Add(__v0); }   }
    }

    public static Audio DeserializeAudio(JSONNode _buf)
    {
        return new Audio(_buf);
    }

    public readonly int Id;
    public readonly int CharacterId;
    public readonly int SkillId;
    public readonly int StateId;
    public readonly string Keyword;
    public readonly int PlayMode;
    /// <summary>
    /// audioName
    /// </summary>
    public readonly System.Collections.Generic.List<AudioData> AudioDatas;
   
    public const int __ID__ = 63613878;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        foreach (var _e in AudioDatas) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "characterId:" + CharacterId + ","
        + "skillId:" + SkillId + ","
        + "stateId:" + StateId + ","
        + "keyword:" + Keyword + ","
        + "playMode:" + PlayMode + ","
        + "audioDatas:" + Luban.StringUtil.CollectionToString(AudioDatas) + ","
        + "}";
    }
}

}
