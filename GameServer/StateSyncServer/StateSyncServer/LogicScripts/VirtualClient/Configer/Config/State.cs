
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using System.Text.Json;


namespace cfg
{
public sealed partial class State : Luban.BeanBase
{
    public State(JsonElement _buf) 
    {
        Id = _buf.GetProperty("id").GetInt32();
        Type = _buf.GetProperty("type").GetString();
        Name = _buf.GetProperty("name").GetString();
        AnimKey = _buf.GetProperty("animKey").GetString();
        ExitType = (StateExitType)_buf.GetProperty("exitType").GetInt32();
        Order = _buf.GetProperty("order").GetInt32();
        { var __json0 = _buf.GetProperty("mutexState"); MutexState = new System.Collections.Generic.List<int>(__json0.GetArrayLength()); foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  MutexState.Add(__v0); }   }
        { var __json0 = _buf.GetProperty("exceptSkills"); ExceptSkills = new System.Collections.Generic.List<int>(__json0.GetArrayLength()); foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  ExceptSkills.Add(__v0); }   }
        IsSkill = _buf.GetProperty("isSkill").GetBoolean();
    }

    public static State DeserializeState(JsonElement _buf)
    {
        return new State(_buf);
    }

    public readonly int Id;
    /// <summary>
    /// 状态类型
    /// </summary>
    public readonly string Type;
    /// <summary>
    /// 状态名称
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 状态动画
    /// </summary>
    public readonly string AnimKey;
    /// <summary>
    /// 状态退出类型
    /// </summary>
    public readonly StateExitType ExitType;
    /// <summary>
    /// 状态优先级
    /// </summary>
    public readonly int Order;
    /// <summary>
    /// 互斥状态
    /// </summary>
    public readonly System.Collections.Generic.List<int> MutexState;
    /// <summary>
    /// 例外技能,如在跳跃状态下可以切换到技能状态，但是只有特点技能 临时处理吧 因为不同角色不同技能
    /// </summary>
    public readonly System.Collections.Generic.List<int> ExceptSkills;
    /// <summary>
    /// 是否属于技能
    /// </summary>
    public readonly bool IsSkill;
   
    public const int __ID__ = 80204913;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "type:" + Type + ","
        + "name:" + Name + ","
        + "animKey:" + AnimKey + ","
        + "exitType:" + ExitType + ","
        + "order:" + Order + ","
        + "mutexState:" + Luban.StringUtil.CollectionToString(MutexState) + ","
        + "exceptSkills:" + Luban.StringUtil.CollectionToString(ExceptSkills) + ","
        + "isSkill:" + IsSkill + ","
        + "}";
    }
}

}
